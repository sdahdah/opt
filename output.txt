python -m unittest demo.py

Problem A, Conjugate Gradient
arg min v(x) =
 [[ 0.3365565118084196]
 [ 0.0560403408011996]
 [-0.43004212910397  ]
 [-0.1919973661194682]
 [-0.2713110905783661]
 [ 0.2100681612553506]]
time =
 0.11805129051208496 s

Problem A, Steepest Descent
arg min v(x) =
 [[ 0.3365563492684218  ]
 [ 0.056040243749614194]
 [-0.43004198106764774 ]
 [-0.19199732831111288 ]
 [-0.27131104327415567 ]
 [ 0.21006809849648578 ]]
time =
 0.13373565673828125 s

Problem A, Secant
arg min v(x) =
 [[ 0.3365564780286234 ]
 [ 0.05604032658465204]
 [-0.43004204678909613]
 [-0.19199734607357466]
 [-0.2713111017365103 ]
 [ 0.21006814694472603]]
time =
 0.023461341857910156 s

Problem A, Conjugate Gradient (Exact Gradient)
arg min v(x) =
 [[ 0.3365563374853034 ]
 [ 0.05604022681668745]
 [-0.4300419755129938 ]
 [-0.19199730461496803]
 [-0.2713110348436187 ]
 [ 0.21006812577105174]]
time =
 0.02059793472290039 s

Problem A, Steepest Descent (Exact Gradient)
arg min v(x) =
 [[ 0.33655628740624    ]
 [ 0.056040188927734325]
 [-0.43004191294335387 ]
 [-0.19199731328013642 ]
 [-0.2713109812982354  ]
 [ 0.21006808226308543 ]]
time =
 0.033330440521240234 s

Problem A, Secant (Exact Gradient)
arg min v(x) =
 [[ 0.33656337462638675]
 [ 0.05608173648153758]
 [-0.42995454956394064]
 [-0.19196141976153716]
 [-0.271286999367469  ]
 [ 0.2100221753089082 ]]
time =
 0.0023195743560791016 s

Problem B, Conjugate Gradient
arg min v(x) =
 [[-1.0739560123163049e-04]
 [-6.8937711419067652e-05]]
time =
 0.016260862350463867 s

Problem B, Steepest Descent
arg min v(x) =
 [[-4.026035192605356e-05]
 [ 7.374233346265572e-05]]
time =
 0.014783620834350586 s

Problem B, Secant
arg min v(x) =
 [[ 5.817828255633541e-05]
 [-4.977488001065342e-05]]
time =
 0.05518817901611328 s

Problem C, Conjugate Gradient
arg min v(x) =
 [[-0.01772764454515256]
 [-0.09577221718933045]]
time =
 0.023577451705932617 s

Problem C, Steepest Descent
arg min v(x) =
 [[-0.01771292056884768]
 [-0.09578264107666024]]
time =
 0.007815361022949219 s

Problem C, Secant
arg min v(x) =
 [[-0.01771975054985538]
 [-0.09577880542991694]]
time =
 0.01424264907836914 s

Problem D, Augmented Lagrange
arg min v(x) =
 [[0.7119386757074797]
 [0.7119386757074797]]
time =
 0.2887232303619385 s

Problem D, Barrier Function
arg min v(x) =
 [[0.7216799789029327]
 [0.6927356536201213]]
time =
 27.6238112449646 s

Problem D, Penalty Function
arg min v(x) =
 [[0.7073566484030288]
 [0.7073566484030288]]
time =
 16.87825918197632 s

Problem D-Eq, Augmented Lagrange
arg min v(x) =
 [[0.6182208942529418]
 [0.7861419254421326]]
time =
 0.15815162658691406 s

Problem D-Eq, Lagrange-Newton
arg min v(x) =
 [[0.6180374845341587]
 [0.7861871710763465]]
time =
 0.004793405532836914 s

Problem E, Augmented Lagrange
arg min v(x) =
 [[0.6536214161200248]
 [0.5716588512575607]]
time =
 0.43001508712768555 s

Problem E, Penalty Function
arg min v(x) =
 [[0.6672778358073892]
 [0.5773212968074429]]
time =
 3.400266170501709 s

Problem E-Eq, Augmented Lagrange
arg min v(x) =
 [[0.6671026301437034]
 [0.5774810731583012]]
time =
 0.11532211303710938 s

Problem E-Eq, Lagrange-Newton
arg min v(x) =
 [[0.6667100274036212]
 [0.5773127247165519]]
time =
 0.012549638748168945 s
